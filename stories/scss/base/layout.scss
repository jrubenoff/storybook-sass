$margin-basic: 1.5rem;

// Outer containers

.l-wrapper,
.l-text-wrapper {
  inline-size: var(--w-container);
  margin: 0 auto;
}

.l-wrapper {
  max-inline-size: var(--w-max);
}

.l-text-wrapper {
  max-inline-size: var(--t-measure);
}

// Media wrapper with intrinsic aspect ratio
//
// Customize the aspect ratio by overriding
// var(--l-frame-width) and var(--l-frame-height)
// within specific components

.l-frame {
  --l-frame-width: 16;
  --l-frame-height: 9;
  aspect-ratio: var(--l-frame-width) / var(--l-frame-height);
  overflow: hidden;
  display: flex;
  justify-content: center;
  align-items: center;

  > img,
  > iframe {
    inline-size: 100%;
    block-size: 100%;
  }
}

// Grid wrapper that automatically tries to
// size columns according to typographic measure
//
// Customize the gutters by overriding var(--g-column-gap)
// within specific components

.l-grid {
  --grid-gap: var(--g-column-gap);
  display: grid;
  flex-wrap: wrap;
  gap: var(--grid-gap);
  
  @supports (width: Min(30rem, 100%)) {
    grid-template-columns: repeat(auto-fit, minmax(Min(calc(var(--t-measure) / 2), 100%), 1fr));
  }
}

// For columns:
// All direct descendants of .l-stack-basic
// (and all descendants, including nested elements, of .l-stack)
// are spaced equally apart from each other
//
// You can customize the exact amount of spacing by
// overriding var(--stack-layout-gap) within specific components


.l-stack-basic,
.l-stack {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}

.l-stack-basic {
  > * {
    margin-block: 0;

    + * {
      margin-block-start: var(--l-stack-gap, var(--t-paragraph));
    }
  } 
}

.l-stack {
  * {
    margin-block: 0;

    + * {
      margin-block-start: var(--l-stack-gap, var(--t-paragraph));
    }
  } 
}

// For rows:
// All direct descendants of .l-cluster are spaced equally
// apart from each other
//
// You can customize the exact amount of spacing by
// overriding var(--stack-layout-gap) within specific components

.l-cluster {
  display: flex;
  flex-wrap: wrap;
  gap: var(--cluster-gap, var(--g-column-gap));
}